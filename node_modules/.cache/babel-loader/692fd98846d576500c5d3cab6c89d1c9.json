{"ast":null,"code":"var _jsxFileName = \"D:\\\\git\\\\deathroll\\\\src\\\\App.js\";\nimport React, { Component } from 'react'; // import logo from './logo.svg';\n\nimport Titlebar from './components/Titlebar/Titlebar';\nimport Rolled from './components/Rolled/Rolled';\nimport BigRedButton from './components/BigRedButton/BigRedButton';\nimport './App.css';\nimport { Container, Row, Col } from 'react-bootstrap';\nconst initialState = {\n  ruleNum: 123,\n  ruleText: \"not a rule\",\n  rolling: false,\n  gameOver: false,\n  dupe: 2\n};\nconst rulesList = [{\n  num: 69,\n  text: \"lock arms and drink\"\n}, {\n  num: 420,\n  text: \"blaze it\"\n}, {\n  num: 17,\n  text: \"naked mile\"\n}];\nconst randomRulesBank = [\"never have i ever\", \"girls drink\", \"guys drink\"];\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.formatValue = value => value.toFixed(0);\n\n    this.rollNewNum = num => {\n      var newNum = 0;\n\n      if (num === 1) {\n        newNum = 500;\n        this.setState({\n          gameOver: false\n        });\n      } else {\n        newNum = Math.ceil(Math.random() * num);\n      }\n\n      return newNum;\n    };\n\n    this.setNewText = newNum => {\n      var newText = \"\";\n\n      if (newNum === 1) {\n        newText = \"YOU LOSE\";\n      } else {\n        for (var i = 0; i < rulesList.length; i++) {\n          if (rulesList[i].num === newNum) {\n            newText = rulesList[i].text;\n          }\n        }\n      }\n\n      if (newText === \"\") {\n        newText = randomRulesBank[Math.floor(Math.random() * randomRulesBank.length)];\n      }\n\n      return newText;\n    };\n\n    this.onRoll = num => {\n      var newNum = this.rollNewNum(num);\n      var newText = this.setNewText(newNum);\n      var stateTimeout = 1000;\n\n      if (newNum === num) {\n        newText += \" X\" + this.state.dupe;\n        this.setState({\n          dupe: this.state.dupe + 1\n        });\n        stateTimeout = 0;\n      } else {\n        this.setState({\n          dupe: 2\n        });\n      }\n\n      this.setState({\n        ruleNum: newNum,\n        rolling: true\n      });\n      var newState = {\n        ruleText: newText,\n        rolling: false\n      };\n\n      if (newNum === 1) {\n        newState.gameOver = true;\n      }\n\n      var self = this;\n      setTimeout(function () {\n        self.setRolledRule(newState);\n      }, stateTimeout);\n    };\n\n    this.setRolledRule = newState => {\n      this.setState(newState);\n    };\n\n    this.state = initialState;\n  }\n\n  render() {\n    const {\n      ruleNum,\n      ruleText,\n      rolling,\n      gameOver\n    } = this.state;\n    return /*#__PURE__*/React.createElement(Container, {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Titlebar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 18\n      }\n    }))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(BigRedButton, {\n      num: ruleNum,\n      onRoll: this.onRoll,\n      formatValue: this.formatValue,\n      gameOver: gameOver,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 16\n      }\n    }))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Rolled, {\n      text: ruleText,\n      rolling: rolling,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 18\n      }\n    }))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["D:/git/deathroll/src/App.js"],"names":["React","Component","Titlebar","Rolled","BigRedButton","Container","Row","Col","initialState","ruleNum","ruleText","rolling","gameOver","dupe","rulesList","num","text","randomRulesBank","App","constructor","formatValue","value","toFixed","rollNewNum","newNum","setState","Math","ceil","random","setNewText","newText","i","length","floor","onRoll","stateTimeout","state","newState","self","setTimeout","setRolledRule","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\n// import logo from './logo.svg';\r\nimport Titlebar from './components/Titlebar/Titlebar';\r\nimport Rolled from './components/Rolled/Rolled';\r\nimport BigRedButton from './components/BigRedButton/BigRedButton';\r\nimport './App.css';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\n\r\nconst initialState = {\r\n  ruleNum: 123,\r\n  ruleText: \"not a rule\",\r\n  rolling: false,\r\n  gameOver: false,\r\n  dupe: 2\r\n}\r\n\r\nconst rulesList = [{\r\n    num: 69,\r\n    text: \"lock arms and drink\"\r\n  },{\r\n    num: 420,\r\n    text: \"blaze it\"\r\n  },{\r\n    num: 17,\r\n    text: \"naked mile\"\r\n  }\r\n]\r\n\r\nconst randomRulesBank = [\"never have i ever\", \"girls drink\", \"guys drink\"];\r\n  \r\nclass App extends Component{\r\n  constructor() {\r\n    super()\r\n    this.state = initialState;\r\n  }\r\n\r\n  formatValue = (value) => value.toFixed(0);\r\n\r\n  rollNewNum = (num) => {\r\n    var newNum = 0;\r\n    if (num === 1) {\r\n      newNum = 500;\r\n      this.setState({gameOver:false})\r\n    } else {\r\n      newNum = Math.ceil(Math.random() * num);\r\n    }\r\n    return newNum;\r\n  }\r\n\r\n  setNewText = (newNum) => {\r\n    var newText = \"\"\r\n    if (newNum === 1) {\r\n      newText = \"YOU LOSE\";\r\n    } else {\r\n      for (var i = 0; i < rulesList.length; i++) {\r\n        if (rulesList[i].num === newNum) {\r\n          newText = rulesList[i].text;\r\n        }\r\n      }\r\n    }\r\n    if (newText === \"\") {\r\n      newText = randomRulesBank[Math.floor(Math.random() * randomRulesBank.length)]\r\n    }\r\n    return newText;\r\n  }\r\n\r\n  onRoll = (num) => {\r\n    var newNum = this.rollNewNum(num);\r\n    var newText = this.setNewText(newNum);\r\n    var stateTimeout = 1000\r\n    \r\n    \r\n    if (newNum === num) {\r\n      newText += (\" X\" + this.state.dupe)\r\n      this.setState({dupe: (this.state.dupe) + 1})\r\n      stateTimeout = 0;\r\n    } else {\r\n      this.setState({dupe:2});\r\n    }\r\n    \r\n    this.setState({\r\n      ruleNum: newNum,\r\n      rolling: true\r\n    })\r\n\r\n    var newState = {\r\n      ruleText: newText,\r\n      rolling: false,\r\n    }\r\n    if (newNum === 1) {\r\n      newState.gameOver = true;\r\n    }\r\n    \r\n    var self = this;\r\n    setTimeout(function () { self.setRolledRule(newState); }, stateTimeout);\r\n  }\r\n\r\n  setRolledRule = (newState) => {\r\n    this.setState(newState);\r\n  }\r\n\r\n  render() {\r\n    const { ruleNum, ruleText, rolling, gameOver } = this.state;\r\n    return (\r\n        <Container className=\"App\">\r\n          <Row>\r\n            <Col><Titlebar /></Col>\r\n          </Row>\r\n          <Row>\r\n          <Col><BigRedButton num={ruleNum} onRoll={this.onRoll} formatValue={this.formatValue} gameOver={gameOver}/></Col>\r\n          </Row>\r\n          <Row>\r\n            <Col><Rolled text={ruleText} rolling={rolling}/></Col>\r\n          </Row>\r\n        </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}