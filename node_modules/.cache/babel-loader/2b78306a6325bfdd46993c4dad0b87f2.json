{"ast":null,"code":"var _jsxFileName = \"D:\\\\git\\\\deathroll\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.onRouteChange = route => {\n      this.setState({\n        route: route\n      });\n    };\n\n    this.toggleTheme = theme => {\n      if (theme === 'light') {\n        this.setState({\n          theme: 'dark'\n        });\n      } else {\n        this.setState({\n          theme: 'light'\n        });\n        particlesOptions.particles.color = '#000000';\n      }\n    };\n\n    this.state = initialState;\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 7\n      }\n    });\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["D:/git/deathroll/src/App.js"],"names":["React","Component","App","constructor","onRouteChange","route","setState","toggleTheme","theme","particlesOptions","particles","color","state","initialState","render"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;;AAEA,OAAO,WAAP;;AAEA,MAAMC,GAAN,SAAkBD,SAAlB,CAA2B;AACzBE,EAAAA,WAAW,GAAG;AACZ;;AADY,SAKdC,aALc,GAKGC,KAAD,IAAW;AACzB,WAAKC,QAAL,CAAc;AACZD,QAAAA,KAAK,EAAEA;AADK,OAAd;AAGD,KATa;;AAAA,SAWdE,WAXc,GAWCC,KAAD,IAAW;AACvB,UAAIA,KAAK,KAAK,OAAd,EAAuB;AACrB,aAAKF,QAAL,CAAc;AACZE,UAAAA,KAAK,EAAE;AADK,SAAd;AAGD,OAJD,MAIO;AACL,aAAKF,QAAL,CAAc;AACZE,UAAAA,KAAK,EAAE;AADK,SAAd;AAGAC,QAAAA,gBAAgB,CAACC,SAAjB,CAA2BC,KAA3B,GAAmC,SAAnC;AACD;AACF,KAtBa;;AAEZ,SAAKC,KAAL,GAAaC,YAAb;AACD;;AAqBDC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AA2BD;;AArDwB;;AAwD3B,eAAeZ,GAAf","sourcesContent":["import React, {Component} from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nclass App extends Component{\n  constructor() {\n    super()\n    this.state = initialState;\n  }\n\n  onRouteChange = (route) => {\n    this.setState({\n      route: route,\n    })\n  }\n\n  toggleTheme = (theme) => {\n    if (theme === 'light') {\n      this.setState({\n        theme: 'dark'\n      })\n    } else {\n      this.setState({\n        theme: 'light'\n      })\n      particlesOptions.particles.color = '#000000';\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\" >\n        {/* <Particles \n          className = 'particles'\n          params={particlesOptions} />\n        <ThemeProvider theme={theme === 'light' ? lightTheme : darkTheme}>\n          <GlobalStyles />\n        <div>\n          <Navigation onRouteChange={this.onRouteChange} onToggle={this.toggleTheme} theme={theme} />\n        </div>\n          <div style={{ display: 'inline-block' }}>\n          {\n          route === 'about' ?\n            <div><About /></div>\n            : ( route === 'projects' ?\n              <div><Projects /></div>\n              : (route === 'workterms' ?\n                <div><WorkTerms /></div>\n                :\n                <div><Home /></div>\n              )\n            )\n          }\n          </div>\n        </ThemeProvider> */}\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}