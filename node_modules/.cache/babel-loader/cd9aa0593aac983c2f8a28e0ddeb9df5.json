{"ast":null,"code":"var _jsxFileName = \"D:\\\\git\\\\deathroll\\\\src\\\\App.js\";\nimport React, { Component } from 'react'; // import logo from './logo.svg';\n\nimport Titlebar from './components/Titlebar/Titlebar';\nimport Rolled from './components/Rolled/Rolled';\nimport BigRedButton from './components/BigRedButton/BigRedButton';\nimport './App.css';\nimport { Container, Row, Col } from 'react-bootstrap';\nconst initMax = 123;\nconst initialState = {\n  ruleNum: initMax,\n  ruleText: \"not a rule\",\n  rolling: false,\n  gameOver: false,\n  dupe: 2\n};\nconst rulesList = [{\n  num: 69,\n  text: \"lock arms and drink\"\n}, {\n  num: 420,\n  text: \"blaze it\"\n}, {\n  num: 17,\n  text: \"naked mile\"\n}]; // const randomRulesBank = [\"never have i ever\", \"\"]\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.formatValue = value => value.toFixed(0);\n\n    this.rollNewNum = num => {\n      var newNum = 0;\n\n      if (num === 1) {\n        newNum = initMax;\n        this.setState({\n          gameOver: false\n        });\n      } else {\n        newNum = Math.ceil(Math.random() * num);\n      }\n\n      return newNum;\n    };\n\n    this.setNewText = newNum => {\n      var newText = \"drink\";\n\n      if (newNum === 1) {\n        newText = \"YOU LOSE, TAKE A SHOT\";\n      } else {\n        for (var i = 0; i < rulesList.length; i++) {\n          if (rulesList[i].num === newNum) {\n            newText = rulesList[i].text;\n          }\n        }\n      }\n\n      return newText;\n    };\n\n    this.onRoll = num => {\n      var newNum = this.rollNewNum(num);\n      var newText = this.setNewText(newNum);\n      var stateTimeout = 1000;\n\n      if (newNum === num) {\n        newText += \" X\" + this.state.dupe;\n        this.setState({\n          dupe: this.state.dupe + 1\n        });\n        stateTimeout = 0;\n      } else {\n        this.setState({\n          dupe: 2\n        });\n      }\n\n      this.setState({\n        ruleNum: newNum,\n        rolling: true\n      });\n      var newState = {\n        ruleText: newText,\n        rolling: false\n      };\n\n      if (newNum === 1) {\n        newState.gameOver = true;\n      }\n\n      var self = this;\n      setTimeout(function () {\n        self.setRolledRule(newState);\n      }, stateTimeout);\n    };\n\n    this.setRolledRule = newState => {\n      this.setState(newState);\n    };\n\n    this.state = initialState;\n  }\n\n  render() {\n    const {\n      ruleNum,\n      ruleText,\n      rolling,\n      gameOver\n    } = this.state;\n    return /*#__PURE__*/React.createElement(Container, {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Titlebar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 18\n      }\n    }))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(BigRedButton, {\n      num: ruleNum,\n      onRoll: this.onRoll,\n      formatValue: this.formatValue,\n      gameOver: gameOver,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 16\n      }\n    }))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Rolled, {\n      text: ruleText,\n      rolling: rolling,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 18\n      }\n    }))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["D:/git/deathroll/src/App.js"],"names":["React","Component","Titlebar","Rolled","BigRedButton","Container","Row","Col","initMax","initialState","ruleNum","ruleText","rolling","gameOver","dupe","rulesList","num","text","App","constructor","formatValue","value","toFixed","rollNewNum","newNum","setState","Math","ceil","random","setNewText","newText","i","length","onRoll","stateTimeout","state","newState","self","setTimeout","setRolledRule","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\n// import logo from './logo.svg';\r\nimport Titlebar from './components/Titlebar/Titlebar';\r\nimport Rolled from './components/Rolled/Rolled';\r\nimport BigRedButton from './components/BigRedButton/BigRedButton';\r\nimport './App.css';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\n\r\nconst initMax = 123;\r\n\r\nconst initialState = {\r\n  ruleNum: initMax,\r\n  ruleText: \"not a rule\",\r\n  rolling: false,\r\n  gameOver: false,\r\n  dupe: 2\r\n}\r\n\r\nconst rulesList = [{\r\n    num: 69,\r\n    text: \"lock arms and drink\"\r\n  },{\r\n    num: 420,\r\n    text: \"blaze it\"\r\n  },{\r\n    num: 17,\r\n    text: \"naked mile\"\r\n  }\r\n]\r\n\r\n// const randomRulesBank = [\"never have i ever\", \"\"]\r\n  \r\nclass App extends Component{\r\n  constructor() {\r\n    super()\r\n    this.state = initialState;\r\n  }\r\n\r\n  formatValue = (value) => value.toFixed(0);\r\n\r\n  rollNewNum = (num) => {\r\n    var newNum = 0;\r\n    if (num === 1) {\r\n      newNum = initMax;\r\n      this.setState({gameOver:false})\r\n    } else {\r\n      newNum = Math.ceil(Math.random() * num);\r\n    }\r\n    return newNum;\r\n  }\r\n\r\n  setNewText = (newNum) => {\r\n    var newText = \"drink\"\r\n    if (newNum === 1) {\r\n      newText = \"YOU LOSE, TAKE A SHOT\";\r\n    } else {\r\n      for (var i = 0; i < rulesList.length; i++) {\r\n        if (rulesList[i].num === newNum) {\r\n          newText = rulesList[i].text;\r\n        }\r\n      }\r\n    }\r\n    return newText;\r\n  }\r\n\r\n  onRoll = (num) => {\r\n    var newNum = this.rollNewNum(num);\r\n    var newText = this.setNewText(newNum);\r\n    var stateTimeout = 1000\r\n    \r\n    \r\n    if (newNum === num) {\r\n      newText += (\" X\" + this.state.dupe)\r\n      this.setState({dupe: (this.state.dupe) + 1})\r\n      stateTimeout = 0;\r\n    } else {\r\n      this.setState({dupe:2});\r\n    }\r\n    \r\n    this.setState({\r\n      ruleNum: newNum,\r\n      rolling: true\r\n    })\r\n\r\n    var newState = {\r\n      ruleText: newText,\r\n      rolling: false,\r\n    }\r\n    if (newNum === 1) {\r\n      newState.gameOver = true;\r\n    }\r\n    \r\n    var self = this;\r\n    setTimeout(function () { self.setRolledRule(newState); }, stateTimeout);\r\n  }\r\n\r\n  setRolledRule = (newState) => {\r\n    this.setState(newState);\r\n  }\r\n\r\n  render() {\r\n    const { ruleNum, ruleText, rolling, gameOver } = this.state;\r\n    return (\r\n        <Container className=\"App\">\r\n          <Row>\r\n            <Col><Titlebar /></Col>\r\n          </Row>\r\n          <Row>\r\n          <Col><BigRedButton num={ruleNum} onRoll={this.onRoll} formatValue={this.formatValue} gameOver={gameOver}/></Col>\r\n          </Row>\r\n          <Row>\r\n            <Col><Rolled text={ruleText} rolling={rolling}/></Col>\r\n          </Row>\r\n        </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}